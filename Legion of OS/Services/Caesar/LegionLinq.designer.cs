#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Caesar
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Legion")]
	public partial class LegionLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public LegionLinqDataContext() : 
				base(global::Caesar.Properties.Settings.Default.LegionConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LegionLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LegionLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LegionLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LegionLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspDeleteService")]
		public int xspDeleteService([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, resultcode);
			resultcode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspDeleteServiceMethod")]
		public int xspDeleteServiceMethod([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, resultcode);
			resultcode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspDeleteServiceSetting")]
		public int xspDeleteServiceSetting([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> serviceid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, serviceid, resultcode);
			resultcode = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspSetSettingById")]
		public ISingleResult<xspSetSettingByIdResult> xspSetSettingById([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string key, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] string value)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, key, value);
			return ((ISingleResult<xspSetSettingByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspSetSettingByKey")]
		public ISingleResult<xspSetSettingByKeyResult> xspSetSettingByKey([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string key, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] string value)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key, value);
			return ((ISingleResult<xspSetSettingByKeyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetSettingById")]
		public int xspGetSettingById([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string value)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, value);
			value = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetSettingByKey")]
		public int xspGetSettingByKey([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string key, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string value)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key, value);
			value = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspDeleteApplication")]
		public int xspDeleteApplication([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, resultcode);
			resultcode = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetApplicationPermissions")]
		public ISingleResult<xspGetApplicationPermissionsResult> xspGetApplicationPermissions([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> applicationId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationId);
			return ((ISingleResult<xspGetApplicationPermissionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspDeleteAllApplciationPermissions")]
		public int xspDeleteAllApplciationPermissions([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> applicationId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspCheckApplicationKeyForCollision")]
		public ISingleResult<xspCheckApplicationKeyForCollisionResult> xspCheckApplicationKeyForCollision([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(36)")] string appKey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> tfCollision)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), appKey, tfCollision);
			tfCollision = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			return ((ISingleResult<xspCheckApplicationKeyForCollisionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetServerStatus")]
		public ISingleResult<xspGetServerStatusResult> xspGetServerStatus()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<xspGetServerStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspAddApplicationPermission")]
		public ISingleResult<xspAddApplicationPermissionResult> xspAddApplicationPermission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> applicationId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> methodId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationId, methodId, resultcode);
			resultcode = ((string)(result.GetParameterValue(2)));
			return ((ISingleResult<xspAddApplicationPermissionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspRevokeKey")]
		public int xspRevokeKey([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> applicationid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(36)")] string key, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(10)")] string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applicationid, key, resultcode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspUpdateService")]
		public int xspUpdateService([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string serviceKey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(36)")] string serviceDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(31)")] string serviceIPRange, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(31)")] string serviceAssembly, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] string serviceClass, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> restricted, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="public", DbType="Bit")] System.Nullable<bool> @public, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> logged, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, serviceKey, serviceDescription, serviceIPRange, serviceAssembly, serviceClass, restricted, @public, logged, resultcode);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			resultcode = ((string)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetService")]
		public ISingleResult<xspGetServiceResult> xspGetService([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> serviceid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceid, resultcode);
			resultcode = ((string)(result.GetParameterValue(1)));
			return ((ISingleResult<xspGetServiceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetServices")]
		public ISingleResult<xspGetServicesResult> xspGetServices()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<xspGetServicesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetMethods")]
		public ISingleResult<xspGetMethodsResult> xspGetMethods()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<xspGetMethodsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetServiceMethods")]
		public ISingleResult<xspGetServiceMethodsResult> xspGetServiceMethods([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> serviceId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceId);
			return ((ISingleResult<xspGetServiceMethodsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspUpdateServiceMethod")]
		public int xspUpdateServiceMethod([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> serviceid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string methodkey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string methodname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cachedresultlifetime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> cacheresult, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> restricted, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="public", DbType="Bit")] System.Nullable<bool> @public, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> logged, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, serviceid, methodkey, methodname, cachedresultlifetime, cacheresult, restricted, @public, logged, resultcode);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			resultcode = ((string)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspExpireResultsCache")]
		public int xspExpireResultsCache([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string servicekey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string methodkey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> itemcount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), servicekey, methodkey, itemcount);
			itemcount = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetRateLimitTypes")]
		public ISingleResult<xspGetRateLimitTypesResult> xspGetRateLimitTypes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<xspGetRateLimitTypesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetApplication")]
		public int xspGetApplication([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(36)")] string apikey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] ref string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(31)")] ref string consumeriprange, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> ratelimittypeid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] ref string ratelimittype, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> ratelimit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> ratelimitinterval, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> ispublic, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> islogged)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), apikey, id, name, consumeriprange, description, ratelimittypeid, ratelimittype, ratelimit, ratelimitinterval, ispublic, islogged);
			id = ((System.Nullable<int>)(result.GetParameterValue(1)));
			name = ((string)(result.GetParameterValue(2)));
			consumeriprange = ((string)(result.GetParameterValue(3)));
			description = ((string)(result.GetParameterValue(4)));
			ratelimittypeid = ((System.Nullable<int>)(result.GetParameterValue(5)));
			ratelimittype = ((string)(result.GetParameterValue(6)));
			ratelimit = ((System.Nullable<int>)(result.GetParameterValue(7)));
			ratelimitinterval = ((System.Nullable<int>)(result.GetParameterValue(8)));
			ispublic = ((System.Nullable<bool>)(result.GetParameterValue(9)));
			islogged = ((System.Nullable<bool>)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetApplicationList")]
		public ISingleResult<xspGetApplicationListResult> xspGetApplicationList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<xspGetApplicationListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspUpdateApplication")]
		public int xspUpdateApplication([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string applicationName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(36)")] string applicationKey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(31)")] string consumeriprange, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ratelimitid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ratelimit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ratelimitinterval, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="public", DbType="Bit")] System.Nullable<bool> @public, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> logged, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, applicationName, applicationKey, consumeriprange, description, ratelimitid, ratelimit, ratelimitinterval, @public, logged, resultcode);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			resultcode = ((string)(result.GetParameterValue(10)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspUpdateServiceSetting")]
		public int xspUpdateServiceSetting([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> serviceid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(64)")] string iv, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8000)")] string value, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> tfEncrypted, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, serviceid, name, iv, value, tfEncrypted, resultcode);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			resultcode = ((string)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.xspGetServiceSettings")]
		public ISingleResult<xspGetServiceSettingsResult> xspGetServiceSettings([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(36)")] string servicekey, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> serviceid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] ref string resultcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), servicekey, serviceid, resultcode);
			resultcode = ((string)(result.GetParameterValue(2)));
			return ((ISingleResult<xspGetServiceSettingsResult>)(result.ReturnValue));
		}
	}
	
	public partial class xspSetSettingByIdResult
	{
		
		private int _id;
		
		public xspSetSettingByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class xspSetSettingByKeyResult
	{
		
		private int _id;
		
		public xspSetSettingByKeyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class xspGetApplicationPermissionsResult
	{
		
		private int _MethodId;
		
		public xspGetApplicationPermissionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodId", DbType="Int NOT NULL")]
		public int MethodId
		{
			get
			{
				return this._MethodId;
			}
			set
			{
				if ((this._MethodId != value))
				{
					this._MethodId = value;
				}
			}
		}
	}
	
	public partial class xspCheckApplicationKeyForCollisionResult
	{
		
		private int _id;
		
		public xspCheckApplicationKeyForCollisionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	public partial class xspGetServerStatusResult
	{
		
		private int _Id;
		
		private string _IPAddress;
		
		private string _HostName;
		
		private bool _IsAssemblyRefreshRequired;
		
		private bool _IsCacheRefreshRequired;
		
		public xspGetServerStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="VarChar(50)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this._HostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAssemblyRefreshRequired", DbType="Bit NOT NULL")]
		public bool IsAssemblyRefreshRequired
		{
			get
			{
				return this._IsAssemblyRefreshRequired;
			}
			set
			{
				if ((this._IsAssemblyRefreshRequired != value))
				{
					this._IsAssemblyRefreshRequired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCacheRefreshRequired", DbType="Bit NOT NULL")]
		public bool IsCacheRefreshRequired
		{
			get
			{
				return this._IsCacheRefreshRequired;
			}
			set
			{
				if ((this._IsCacheRefreshRequired != value))
				{
					this._IsCacheRefreshRequired = value;
				}
			}
		}
	}
	
	public partial class xspAddApplicationPermissionResult
	{
		
		private System.Nullable<int> _Column1;
		
		public xspAddApplicationPermissionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class xspGetServiceResult
	{
		
		private string _ServiceKey;
		
		private string _AssemblyName;
		
		private string _ClassName;
		
		private string _Description;
		
		private string _ConsumerIPRange;
		
		private bool _IsRestricted;
		
		private bool _IsPublic;
		
		private bool _IsLogged;
		
		public xspGetServiceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceKey
		{
			get
			{
				return this._ServiceKey;
			}
			set
			{
				if ((this._ServiceKey != value))
				{
					this._ServiceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this._AssemblyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumerIPRange", DbType="VarChar(31)")]
		public string ConsumerIPRange
		{
			get
			{
				return this._ConsumerIPRange;
			}
			set
			{
				if ((this._ConsumerIPRange != value))
				{
					this._ConsumerIPRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestricted", DbType="Bit NOT NULL")]
		public bool IsRestricted
		{
			get
			{
				return this._IsRestricted;
			}
			set
			{
				if ((this._IsRestricted != value))
				{
					this._IsRestricted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLogged", DbType="Bit NOT NULL")]
		public bool IsLogged
		{
			get
			{
				return this._IsLogged;
			}
			set
			{
				if ((this._IsLogged != value))
				{
					this._IsLogged = value;
				}
			}
		}
	}
	
	public partial class xspGetServicesResult
	{
		
		private int _ServiceId;
		
		private string _ServiceKey;
		
		private string _AssemblyName;
		
		private string _ClassName;
		
		private string _ConsumerIPRange;
		
		private bool _IsRestricted;
		
		private bool _IsPublic;
		
		private bool _IsLogged;
		
		private string _Description;
		
		public xspGetServicesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int NOT NULL")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this._ServiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ServiceKey
		{
			get
			{
				return this._ServiceKey;
			}
			set
			{
				if ((this._ServiceKey != value))
				{
					this._ServiceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssemblyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this._AssemblyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumerIPRange", DbType="VarChar(31)")]
		public string ConsumerIPRange
		{
			get
			{
				return this._ConsumerIPRange;
			}
			set
			{
				if ((this._ConsumerIPRange != value))
				{
					this._ConsumerIPRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestricted", DbType="Bit NOT NULL")]
		public bool IsRestricted
		{
			get
			{
				return this._IsRestricted;
			}
			set
			{
				if ((this._IsRestricted != value))
				{
					this._IsRestricted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLogged", DbType="Bit NOT NULL")]
		public bool IsLogged
		{
			get
			{
				return this._IsLogged;
			}
			set
			{
				if ((this._IsLogged != value))
				{
					this._IsLogged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class xspGetMethodsResult
	{
		
		private int _MethodId;
		
		private int _ServiceId;
		
		private string _MethodKey;
		
		private string _ServiceKey;
		
		private string _MethodName;
		
		private bool _IsMissing;
		
		private System.Nullable<bool> _IsRestricted;
		
		private bool _IsPublic;
		
		private bool _IsLogged;
		
		public xspGetMethodsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodId", DbType="Int NOT NULL")]
		public int MethodId
		{
			get
			{
				return this._MethodId;
			}
			set
			{
				if ((this._MethodId != value))
				{
					this._MethodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int NOT NULL")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this._ServiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MethodKey
		{
			get
			{
				return this._MethodKey;
			}
			set
			{
				if ((this._MethodKey != value))
				{
					this._MethodKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceKey", DbType="VarChar(50)")]
		public string ServiceKey
		{
			get
			{
				return this._ServiceKey;
			}
			set
			{
				if ((this._ServiceKey != value))
				{
					this._ServiceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MethodName
		{
			get
			{
				return this._MethodName;
			}
			set
			{
				if ((this._MethodName != value))
				{
					this._MethodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMissing", DbType="Bit NOT NULL")]
		public bool IsMissing
		{
			get
			{
				return this._IsMissing;
			}
			set
			{
				if ((this._IsMissing != value))
				{
					this._IsMissing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestricted", DbType="Bit")]
		public System.Nullable<bool> IsRestricted
		{
			get
			{
				return this._IsRestricted;
			}
			set
			{
				if ((this._IsRestricted != value))
				{
					this._IsRestricted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLogged", DbType="Bit NOT NULL")]
		public bool IsLogged
		{
			get
			{
				return this._IsLogged;
			}
			set
			{
				if ((this._IsLogged != value))
				{
					this._IsLogged = value;
				}
			}
		}
	}
	
	public partial class xspGetServiceMethodsResult
	{
		
		private int _MethodId;
		
		private int _ServiceId;
		
		private string _MethodKey;
		
		private string _ServiceKey;
		
		private string _MethodName;
		
		private System.Nullable<int> _CachedResultLifetime;
		
		private bool _IsResultCacheable;
		
		private bool _IsPublic;
		
		private bool _IsRestricted;
		
		private bool _IsLogged;
		
		public xspGetServiceMethodsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodId", DbType="Int NOT NULL")]
		public int MethodId
		{
			get
			{
				return this._MethodId;
			}
			set
			{
				if ((this._MethodId != value))
				{
					this._MethodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="Int NOT NULL")]
		public int ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this._ServiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodKey", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MethodKey
		{
			get
			{
				return this._MethodKey;
			}
			set
			{
				if ((this._MethodKey != value))
				{
					this._MethodKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceKey", DbType="VarChar(50)")]
		public string ServiceKey
		{
			get
			{
				return this._ServiceKey;
			}
			set
			{
				if ((this._ServiceKey != value))
				{
					this._ServiceKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MethodName
		{
			get
			{
				return this._MethodName;
			}
			set
			{
				if ((this._MethodName != value))
				{
					this._MethodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CachedResultLifetime", DbType="Int")]
		public System.Nullable<int> CachedResultLifetime
		{
			get
			{
				return this._CachedResultLifetime;
			}
			set
			{
				if ((this._CachedResultLifetime != value))
				{
					this._CachedResultLifetime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResultCacheable", DbType="Bit NOT NULL")]
		public bool IsResultCacheable
		{
			get
			{
				return this._IsResultCacheable;
			}
			set
			{
				if ((this._IsResultCacheable != value))
				{
					this._IsResultCacheable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestricted", DbType="Bit NOT NULL")]
		public bool IsRestricted
		{
			get
			{
				return this._IsRestricted;
			}
			set
			{
				if ((this._IsRestricted != value))
				{
					this._IsRestricted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLogged", DbType="Bit NOT NULL")]
		public bool IsLogged
		{
			get
			{
				return this._IsLogged;
			}
			set
			{
				if ((this._IsLogged != value))
				{
					this._IsLogged = value;
				}
			}
		}
	}
	
	public partial class xspGetRateLimitTypesResult
	{
		
		private int _Id;
		
		private string _Name;
		
		public xspGetRateLimitTypesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class xspGetApplicationListResult
	{
		
		private int _ApplicationId;
		
		private string _ApplicationName;
		
		private string _ApplicationKey;
		
		private string _ConsumerIPRange;
		
		private string _Description;
		
		private System.Nullable<int> _RateLimitTypeId;
		
		private string _RateLimitType;
		
		private System.Nullable<int> _RateLimit;
		
		private System.Nullable<int> _RateLimitInterval;
		
		private bool _IsPublic;
		
		private bool _IsLogged;
		
		public xspGetApplicationListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this._ApplicationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="Char(36)")]
		public string ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this._ApplicationKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumerIPRange", DbType="VarChar(31)")]
		public string ConsumerIPRange
		{
			get
			{
				return this._ConsumerIPRange;
			}
			set
			{
				if ((this._ConsumerIPRange != value))
				{
					this._ConsumerIPRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateLimitTypeId", DbType="Int")]
		public System.Nullable<int> RateLimitTypeId
		{
			get
			{
				return this._RateLimitTypeId;
			}
			set
			{
				if ((this._RateLimitTypeId != value))
				{
					this._RateLimitTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateLimitType", DbType="VarChar(50)")]
		public string RateLimitType
		{
			get
			{
				return this._RateLimitType;
			}
			set
			{
				if ((this._RateLimitType != value))
				{
					this._RateLimitType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateLimit", DbType="Int")]
		public System.Nullable<int> RateLimit
		{
			get
			{
				return this._RateLimit;
			}
			set
			{
				if ((this._RateLimit != value))
				{
					this._RateLimit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateLimitInterval", DbType="Int")]
		public System.Nullable<int> RateLimitInterval
		{
			get
			{
				return this._RateLimitInterval;
			}
			set
			{
				if ((this._RateLimitInterval != value))
				{
					this._RateLimitInterval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLogged", DbType="Bit NOT NULL")]
		public bool IsLogged
		{
			get
			{
				return this._IsLogged;
			}
			set
			{
				if ((this._IsLogged != value))
				{
					this._IsLogged = value;
				}
			}
		}
	}
	
	public partial class xspGetServiceSettingsResult
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _IV;
		
		private string _Value;
		
		private bool _IsEncrypted;
		
		public xspGetServiceSettingsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IV", DbType="VarChar(64)")]
		public string IV
		{
			get
			{
				return this._IV;
			}
			set
			{
				if ((this._IV != value))
				{
					this._IV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(8000) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEncrypted", DbType="Bit NOT NULL")]
		public bool IsEncrypted
		{
			get
			{
				return this._IsEncrypted;
			}
			set
			{
				if ((this._IsEncrypted != value))
				{
					this._IsEncrypted = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
